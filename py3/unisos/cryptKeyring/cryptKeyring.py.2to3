RefactoringTool: Skipping optional fixer: buffer
RefactoringTool: Skipping optional fixer: idioms
RefactoringTool: Skipping optional fixer: set_literal
RefactoringTool: Skipping optional fixer: ws_comma
RefactoringTool: Refactored ./cryptKeyring/py3/unisos/cryptKeyring/cryptKeyring.py
RefactoringTool: Files that were modified:
RefactoringTool: ./cryptKeyring/py3/unisos/cryptKeyring/cryptKeyring.py
--- ./cryptKeyring/py3/unisos/cryptKeyring/cryptKeyring.py	(original)
+++ ./cryptKeyring/py3/unisos/cryptKeyring/cryptKeyring.py	(refactored)
@@ -102,7 +102,7 @@
 from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
 from cryptography.hazmat.backends import default_backend
 
-import cPickle
+import pickle
 
 from unisos.symCrypt import symCrypt
 
@@ -175,7 +175,7 @@
             argChoices.pop(0)
             actions = argChoices
         for each in actions:
-            print each
+            print(each)
             if interactive:
                 #print( str( __doc__ ) )  # This is the Summary: from the top doc-string
                 #version(interactive=True)
@@ -592,7 +592,7 @@
         cryptedPasswd = cryptoKeyring.passwdSet(passwd)
 
         if interactive:
-            print("cryptedPasswd={}".format(cryptedPasswd))
+            print(("cryptedPasswd={}".format(cryptedPasswd)))
 
         return cmndOutcome.set(
             opError=opError,
@@ -742,7 +742,7 @@
             if keyringPasswd:
                 print(keyringPasswd)
             else:
-                print("No Passwd Found For: system={system} user={user}".format(system=system, user=user))
+                print(("No Passwd Found For: system={system} user={user}".format(system=system, user=user)))
 
         return cmndOutcome.set(
             opError=opError,
@@ -880,7 +880,7 @@
     def load(self):
 ####+END:        
         f = open(self.pickleFile, 'rb')
-        tmp_dict = cPickle.load(f)
+        tmp_dict = pickle.load(f)
         f.close()          
 
         self.__dict__.update(tmp_dict) 
@@ -893,7 +893,7 @@
     def save(self):
 ####+END:        
         f = open(self.pickleFile, 'wb')
-        cPickle.dump(self.__dict__, f, 2)
+        pickle.dump(self.__dict__, f, 2)
         f.close()        
 
 
@@ -915,7 +915,7 @@
         ).log()
         if outcome.isProblematic(): return(icm.EH_badOutcome(outcome))
 
-        print(outcome.results)
+        print((outcome.results))
 
 
 
